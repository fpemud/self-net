#!/usr/bin/python2
# -*- coding: utf-8; tab-width: 4; indent-tabs-mode: t -*-

import os
import sys
import shutil
import tempfile
from gi.repository import GLib
from dbus.mainloop.glib import DBusGMainLoop
sys.path.append('/usr/lib/selfnetd')
from sn_util import SnUtil
from sn_param import SnParam
from sn_manager_config import SnConfigManager
from sn_manager_local import SnLocalManager
from sn_manager_peer import SnPeerManager
from sn_dbus import DbusMainObject

param = SnParam()
dbusMainObject = None

try:
	# create directory
	SnUtil.mkDirAndClear(param.runDir)
	param.tmpDir = tempfile.mkdtemp(prefix="selfnetd-")

	# create main loop
	DBusGMainLoop(set_as_default=True)
	param.mainloop = GLib.MainLoop()

	# create config manager / peer manager
	param.configManager = SnConfigManager(param)
	param.localManager = SnLocalManager(param)
	param.peerManager = SnPeerManager(param)

	# create dbus root object
#	dbusMainObject = DbusMainObject(param)

	# start main loop
	param.mainloop.run()
finally:
	if dbusMainObject is not None:
		dbusMainObject.release()
	if param.tmpDir is not None and os.path.exists(param.tmpDir):
		shutil.rmtree(param.tmpDir)

